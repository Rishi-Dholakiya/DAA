class Solution {
    public int mySqrt(int x) {
        // Edge cases for x = 0 and x = 1
        if (x == 0 || x == 1) {
            return x;
        }

        int start = 1;
        int end = x;

        // Binary search to find the square root
        while (start <= end) {
            long mid = start + (end - start) / 2; // Use long to avoid overflow
            long value = mid * mid; // Calculate square using long

            if (value == x) {
                return (int) mid; // Cast long back to int for the return
            } else if (value < x) {
                start = (int) mid + 1; // Adjust start, cast mid to int
            } else {
                end = (int) mid - 1; // Adjust end, cast mid to int
            }
        }
        // End will contain the largest integer whose square is less than or equal to x
        return end;
    }
}
